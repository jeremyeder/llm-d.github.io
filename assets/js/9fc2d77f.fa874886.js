"use strict";(self.webpackChunkdocusaurus_test=self.webpackChunkdocusaurus_test||[]).push([[4345],{2477:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"architecture/Component Architecture/kv-cache","title":"Distributed KV-Cache: KVCache Manager","description":"Pluggable KVCache Manager for KVCache Aware Routing in vLLM-based serving platforms.","source":"@site/docs/architecture/Component Architecture/02_kv-cache.md","sourceDirName":"architecture/Component Architecture","slug":"/architecture/Component Architecture/kv-cache","permalink":"/webdocs/docs/architecture/Component Architecture/kv-cache","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"structureSidebar","previous":{"title":"Deployer Architecture","permalink":"/webdocs/docs/architecture/Component Architecture/deployer"},"next":{"title":"Prefill/Decode Disaggregator","permalink":"/webdocs/docs/architecture/Component Architecture/prefill-decode"}}');var a=n(4848),c=n(8453);const o={sidebar_position:2},i="Distributed KV-Cache: KVCache Manager",s={},d=[{value:"Overview",id:"overview",level:2},{value:"Examples",id:"examples",level:2}];function l(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",mermaid:"mermaid",p:"p",ul:"ul",...(0,c.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.header,{children:(0,a.jsx)(r.h1,{id:"distributed-kv-cache-kvcache-manager",children:"Distributed KV-Cache: KVCache Manager"})}),"\n",(0,a.jsx)(r.p,{children:"Pluggable KVCache Manager for KVCache Aware Routing in vLLM-based serving platforms.\r\nAt the current stage, this repo implements an indexer module and not a standalone service."}),"\n",(0,a.jsxs)(r.p,{children:["High level slides can be found at ",(0,a.jsx)(r.a,{href:"https://ibm-my.sharepoint.com/:p:/p/maroon_ayoub/EY0bqkkWsPtOjRguwX6FMNMB8gfzUP9wMvLEsv3OmUNX5g?e=x8xvLQ",children:"KVCache Manager"}),"."]}),"\n",(0,a.jsx)(r.h2,{id:"overview",children:"Overview"}),"\n",(0,a.jsxs)(r.p,{children:["The code defines a ",(0,a.jsx)(r.a,{href:"pkg/kv-cache/indexer.go",children:"KVCacheIndexer"})," module that efficiently maintains a global view of KVCache states and localities.\r\nIn the current state of vLLM, the only available information on KVCache availability is that of the offloaded tensors to KVCache Engines via the Connector API."]}),"\n",(0,a.jsxs)(r.p,{children:["The ",(0,a.jsx)(r.code,{children:"kvcache.Indexer"})," module is a pluggable Go package designed for use by orchestrators to enable KVCache-aware scheduling decisions. It will soon also be deployable as a gRPC server."]}),"\n",(0,a.jsx)(r.mermaid,{value:'graph \r\n  subgraph Cluster\r\n    Router\r\n    subgraph KVCacheManager[KVCache Manager]\r\n      KVCacheIndexer[KVCache Indexer]\r\n      PrefixStore[LRU Prefix Store]\r\n      KVBlockToPodIndex[KVBlock to Pod availability Index]\r\n    end\r\n    subgraph vLLMNode[vLLM Node]\r\n      vLLMCore[vLLM Core]\r\n      KVCacheEngine["KVCache Engine (LMCache)"]\r\n    end\r\n    Redis\r\n  end\r\n\r\n  Router --\x3e|"Score(prompt, ModelName, relevantPods)"| KVCacheIndexer\r\n  KVCacheIndexer --\x3e|"{Pod to Scores map}"| Router\r\n  Router --\x3e|Route| vLLMNode\r\n  \r\n  KVCacheIndexer --\x3e|"FindLongestTokenizedPrefix(prompt, ModelName) -> tokens"| PrefixStore\r\n  PrefixStore --\x3e|"DigestPromptAsync"| PrefixStore\r\n  KVCacheIndexer --\x3e|"GetPodsForKeys(tokens) -> {KVBlock keys to Pods} availability map"| KVBlockToPodIndex\r\n  KVBlockToPodIndex --\x3e|"Redis MGet(blockKeys) -> {KVBlock keys to Pods}"| Redis\r\n\r\n  vLLMCore --\x3e|Connector API| KVCacheEngine\r\n  KVCacheEngine --\x3e|"UpdateIndex(KVBlock keys, nodeIP)"| Redis'}),"\n",(0,a.jsxs)(r.p,{children:["This overview greatly simplifies the actual architecture and combines steps across several submodules.\r\nFor a detailed architecture, refer to the ",(0,a.jsx)(r.a,{href:"docs/architecture.md",children:"architecture"})," document."]}),"\n",(0,a.jsxs)(r.p,{children:["Disclaimer: currently, this module relies on vLLM/LMCache image: ",(0,a.jsx)(r.code,{children:"lmcache/vllm-openai:2025-03-10"}),". Refer to ",(0,a.jsx)(r.a,{href:"vllm-setup-helm",children:"this chart"})," for deploying."]}),"\n",(0,a.jsx)(r.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"examples/kvcache-indexer/README.md",children:"KVCache Indexer"}),":","\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsx)(r.li,{children:"A reference implementation of using the KVCacheIndex module."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"examples/kv-cache-aware-scorer/README.md",children:"KVCache Aware Scorer"}),":","\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:["A reference implementation of integrating the KVCacheIndex module in an inference-gateway based router with ",(0,a.jsx)(r.code,{children:"Scorers"}),"."]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,c.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>i});var t=n(6540);const a={},c=t.createContext(a);function o(e){const r=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(c.Provider,{value:r},e.children)}}}]);